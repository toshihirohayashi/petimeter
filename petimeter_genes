#! /usr/bin/env python
import json
import argparse
import sys 

cover_threshold=0.95     # How well should the cDNA have been matched to the assembly? This matches 'min_coverage_for_complete_gene' in petimeter.

################################################################################################################    
def restricted_float(x):
    x = float(x)
    if x <= 0.0 or x > 1.0:
        raise argparse.ArgumentTypeError("%r not in range (0.0, 1.0]"%(x,))
    return x
################################################################################################################    

def open_details_file(fname):
    try:
        h = open(fname)
        d = json.load(h)
    except Exception as e:
        sys.stderr.write("Warning: Could not read JSON data from file '" + fname + "'. Aborting.\n")
        exit(1)

    dataset_name = d.get('name')
    if not dataset_name:
        sys.stderr.write("Warning: file '" + f + "' is probably not output from petimeter: the dataset name (may be filename) is missing. Ignoring and continuing.\n")

    return (dataset_name, d)
        
################################################################################################################    

if __name__ == "__main__":

    # Requires python 2.7 or later (due to the dictionary comprehensions?)
    if (sys.version_info[0] == 1) or (sys.version_info[0] == 2 and sys.version_info[1] < 7):
        print("This script requires Python version 2.7 or later")
        sys.exit(1)

    parser = argparse.ArgumentParser(description='Take a petimeter details file (in JSON format) and output the list of genes the assembly contains.')
    parser.add_argument('-t', '--threshold', type=restricted_float, dest='cover_threshold', action='store',  help='Minimum alignment fraction of cDNA on contig. Default is 0.95. Set to 0 to get _every_ trace of a gene matched upp.', default=cover_threshold)
    parser.add_argument('jsonfiles', nargs='+')

    args = parser.parse_args()
    cover_threshold = float(args.cover_threshold)

    for f in args.jsonfiles:
        (name, d) = open_details_file(f)
        for g in list(d['cDNA_coverage'].keys()):
            if d['cDNA_coverage'][g] >= cover_threshold:
                print(g)

